# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def isPalindrome(self, head: ListNode) -> bool:
        def reverse(head):
            q,p = None,head
            while p!=None:
                temp = p.next
                p.next = q
                q = p
                p = temp
            return q
        
        slow, fast = head, head
        while fast!=None and fast.next!=None:
            slow = slow.next
            fast = fast.next.next
        tail = reverse(slow)
        while head!=None and tail!=None:
            if head.val != tail.val:
                return False
            else:
                head = head.next
                tail = tail.next
        return True
            
